package com.sunrise.board.controller;

import java.util.List;
import java.util.Locale;

import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.sunrise.board.service.BoardService;
import com.sunrise.board.vo.BoardVO;
import com.sunrise.board.vo.ComCodeVO;
import com.sunrise.board.vo.UserInfoVO;

import lombok.extern.log4j.Log4j;

@Log4j
@Controller
public class BoardController extends HttpServlet{
	
	@Autowired
	BoardService bbService;
	

	@RequestMapping(value = "/list", method = RequestMethod.GET)
	public String board(Locale locale, Model model, BoardVO vo) {
		
		List<BoardVO> list = bbService.boardList();
		model.addAttribute("list",list);

		int total = 0;
		total = bbService.boardCount(vo);
		model.addAttribute("total", total);
		
		return "boardList";
	}
	
	/* AJAX */
	@RequestMapping(value = "/totalChecker", produces = "application/json; charset=utf8")
	@ResponseBody
	public int totalCheck(@RequestParam("param") String parameter) {
		int result = 0;
		result = bbService.totalCheckerLogic(parameter);
		return result;
	}
	
	/* 0822 */
	/* 회원가입 */
	@RequestMapping(value = "/goJoin", method = RequestMethod.GET)
	public String goJoin(Locale locale, Model model) {
		
		
		List<ComCodeVO> phoneList = bbService.selectPhoneCode();
		model.addAttribute("phoneList",phoneList);
		
		return "join";
	}
	
	
	/* login */
	@RequestMapping(value = "/goLogin", method = RequestMethod.GET)
	public String goLogin(Locale locale, Model model) {
		
		return "login";
	}
	
	
	/* boardWrite */
	@RequestMapping(value = "/boardWrite", method = RequestMethod.GET)
	public String boardWrite(Locale locale, Model model) {
		
		return "boardWrite";
	}
	
	
	/* boardView */
	@RequestMapping(value = "/boardView", method = RequestMethod.GET)
	public String boardView(Locale locale, Model model) {
		
		return "boardView";
	}
	
	/* update */
	@RequestMapping(value = "/update", method = RequestMethod.GET)
	public String update(Locale locale, Model model) {
		
		return "update";
	}
	
	
	/* 폼 작성 후 회원가입 */
	@RequestMapping(value = "/join", method = RequestMethod.POST)
	public String join(Locale locale, Model model, UserInfoVO userVO, String USER_ID) {
		
		System.out.println("타나요");
		bbService.join(userVO);
		System.out.println(userVO.toString());
		
		return "redirect:/list";
	}
	
	
	@RequestMapping(value = "/login", method = RequestMethod.POST)
	public String login(HttpServletRequest request, Model model, UserInfoVO userVO) {
		
		String id = request.getParameter("USER_ID");
		String pw = request.getParameter("USER_PW");
		String userPw = bbService.checkPw(userVO.getUSER_ID());
		
		/*
		if(pw.equals(userPw)) {	// 입력한 비번이 디비상 회원 비번과 같으면
			
			HttpSession session = request.getSession(true);			// 세션 객체 생성
			session.setAttribute("userInfo", session);				// 세션 데이터 저장
			
			UserInfoVO member = (UserInfoVO) session.getAttribute("userInfo");
		}
		*/
		
		/*
		int total = 0;
		total = bbService.boardCount(vo);
		model.addAttribute("total", total);
		*/
		
		

		
		return "redirect:/list";
	}
	
	// 보민이거 긁어옴
	// 로그인 할거임
	/*
	@RequestMapping(value = "/login", method = RequestMethod.POST)
	public String loginPublic(@ModelAttribute UserInfoVO userVO, BindingResult bindingResult,
				HttpServletRequest request, HttpServletResponse response) {
			
			암호화된 비밀번호 갖고오기 
			 String encPw = bbService.checkPw(userVO.getUSER_ID()); // 입력된 비번이랑 받아온 비번 비교
								
			
				HttpSession session = request.getSession(); // 세션이 있으면 있는 세션 반환, 없으면 신규 세션을 생성하여 반환

				 UserInfoVO userInfo = bbService.getUser(userVO);

				// 오류나면 로그인페이지로 다시 감.
				if (userInfo == null) {
					session.setAttribute("userInfo", null);
					bindingResult.reject("loginFail", "아이디 또는 비밀번호가 맞지 않습니다.");
					return "goLogin";
				}
				session.setAttribute("user", userVO); // 세션에 로그인 회원 정보 보관

				System.out.println(session.getAttribute("user")) ;

				return "redirect:/KingTrip/main";
		}
		*/
	
}
